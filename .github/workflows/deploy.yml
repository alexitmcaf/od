      - name: Test Odoo and PostgreSQL Integration
        run: |
          cat <<EOF > docker-compose.test.yml
          version: '3.8'
          services:
            db:
              image: postgres:15
              environment:
                POSTGRES_USER: odoo
                POSTGRES_PASSWORD: odoo16@2022
                POSTGRES_DB: odoo16
              volumes:
                - postgres_data:/var/lib/postgresql/data
              healthcheck:
                test: ["CMD", "pg_isready", "-U", "odoo"]
                interval: 5s
                timeout: 10s
                retries: 5
              networks:
                - odoo-network
              restart: always

            odoo16:
              image: myodoo:16
              build:
                context: .
                dockerfile: docker/Dockerfile
              depends_on:
                db:
                  condition: service_healthy
              ports:
                - "10016:8069"
                - "20016:8072"
              environment:
                DB_HOST: db
                DB_PORT: 5432
                DB_USER: odoo
                DB_PASSWORD: odoo16@2022
                DB_NAME: odoo16
                ODOO_CONF: /etc/odoo/odoo.conf
              volumes:
                - ./addons:/mnt/extra-addons
                - ./update_module_list.py:/scripts/update_module_list.py
                - ./etc:/etc/odoo
                - ./scripts:/scripts
                - ./logs:/var/log/odoo
              entrypoint: >
                bash -c "
                /scripts/wait-for-it.sh db:5432 --timeout=60 &&
                python3 /scripts/update_module_list.py &&
                /entrypoint.sh odoo -i base"
              networks:
                - odoo-network
              restart: always

          volumes:
            postgres_data: {}

          networks:
            odoo-network:
              driver: bridge
          EOF

          docker-compose -f docker-compose.test.yml up -d

      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            docker exec od_db_1 pg_isready -U odoo && break
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Debug PostgreSQL
        run: |
          docker exec od_db_1 psql -U odoo -c "\l"

      - name: Test Odoo Service
        run: |
          echo "Waiting for Odoo to be ready..."
          for i in {1..20}; do
            if curl -f http://localhost:10016; then
              echo "Odoo is ready!"
              break
            fi
            echo "Retrying in 10 seconds..."
            sleep 10
          done

          curl -f http://localhost:10016 || { echo 'Odoo failed to start or connect to PostgreSQL. Check logs for details.'; docker-compose -f docker-compose.test.yml logs; exit 1; }

          docker-compose -f docker-compose.test.yml logs
          docker-compose -f docker-compose.test.yml down
